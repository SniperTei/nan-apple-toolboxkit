// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios18.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name NanToolboxKit
import Foundation
@_exported import NanToolboxKit
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct SNPLogConfig {
  public let logFilePath: Swift.String
  public let logFileName: Swift.String
  public let logLevel: NanToolboxKit.SNPLogLevel
  public let logType: NanToolboxKit.SNPLogType
  public let logInfoType: NanToolboxKit.SNPLogInfoType
  public init(logFilePath: Swift.String, logFileName: Swift.String, logLevel: NanToolboxKit.SNPLogLevel = .debug, logType: NanToolboxKit.SNPLogType = .console, logInfoType: NanToolboxKit.SNPLogInfoType = .default)
}
public enum SNPLogLevel {
  case debug
  case info
  case warning
  case error
  public static func == (a: NanToolboxKit.SNPLogLevel, b: NanToolboxKit.SNPLogLevel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum SNPLogType {
  case console
  case file
  public static func == (a: NanToolboxKit.SNPLogType, b: NanToolboxKit.SNPLogType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum SNPLogInfoType {
  case `default`
  case detailed
  public static func == (a: NanToolboxKit.SNPLogInfoType, b: NanToolboxKit.SNPLogInfoType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public class SNPLogManager {
  public static var shared: NanToolboxKit.SNPLogManager {
    get
  }
  public static func setup(config: NanToolboxKit.SNPLogConfig)
  public init(config: NanToolboxKit.SNPLogConfig)
  public func writeLog(log: Swift.String, file: Swift.String = #file, line: Swift.Int = #line)
  @objc deinit
}
extension NanToolboxKit.SNPLogLevel : Swift.Equatable {}
extension NanToolboxKit.SNPLogLevel : Swift.Hashable {}
extension NanToolboxKit.SNPLogType : Swift.Equatable {}
extension NanToolboxKit.SNPLogType : Swift.Hashable {}
extension NanToolboxKit.SNPLogInfoType : Swift.Equatable {}
extension NanToolboxKit.SNPLogInfoType : Swift.Hashable {}
